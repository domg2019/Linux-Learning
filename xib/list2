xib@sword-166d:/ext/schenker/toolslocal $ nl list2
     1  #!/bin/bash
     2  ##################################################################################################################
     3  #
     4  # list - provides an overview about system and comsys status.
     5  # uses two configuration files for directories to search through (OPTIMIZE ME!!!):
     6  #          /ext/schenker/support/tools/check_dir
     7  #          /ext/schenker/support/tools/check_comsys_dir
     8  #
     9  # original idea by Alexandros Cabadakis on: 15th of May 2008
    10  # rewritten and extended by Lars Herrlein 2013-2018
    11  # last change:
    12  #                               14.02.2019 (lh) - fixed    size evaluation of file generated by lslt
    13  #                               19.11.2018 (lh) - fixed?   some directories are not shown
    14  #                               11.09.2018 (lh) - added    lslt SLOW handling of MANY files in one directory
    15  #                               02.01.2018 (lh) - fixed    usage of LIST2TEMPFILE
    16  #                               04.10.2017 (lh) - fixed?   another try for file names with spaces, but not sure if this works
    17  #                               01.09.2016 (lh) - fixed    strange output in some cases
    18  #                               31.08.2016 (lh) - fixed    file with special characters were ignored
    19  #                               31.03.2016 (lh) - changed  OWNPID now uses a more random number
    20  #                               13.11.2015 (lh) - fixed    files with space in the name were ignored
    21  #                               05.11.2015 (lh) - changed  parameter  -withfreediskspace adds below removed functionality
    22  #                                               - changed  df -h will no longer be displayed by default
    23  #                               15.10.2015 (lh) - fixed    repaired below change after complain from Leo Su (added now pushd / popd in lslt)
    24  #                               12.10.2015 (lh) - added    first attempt to remove the path names from the file names in the directory listing
    25  #                               24.08.2015 (lh) - changed  rehashed below change. still very slow due to usage of gfind AND ls -lt
    26  #                               24.07.2015 (lh) - added    parameter -fileagemin to restrict output of only files older than <minutes>
    27  #                               08.01.2015 (lh) - added    prefix for oldest and most recent files for ALL directories
    28  #                               07.01.2015 (lh) - added    command line switch -verbose to make additional output optional
    29  #                               06.01.2015 (lh) - fixed    display issue when a directory contained only one file,
    30  #                                                          output of details in directories with files from more than
    31  #                                                          agreement now only if more than 2 files exist in that directory
    32  #                                                          (improved readability)
    33  #                               05.01.2015 (lh) - added:   more detailed output of directories containing files from
    34  #                                                          different agreements (e.g. /ext/comsys/impwork/ )
    35  ##################################################################################################################

    36  #temporary needed for commands that work only when prepending the sfw dirs
    37  #ToDo: find what command that is (I'm clueless)
    38  export TMP_PATH=$PATH
    39  export PATH=/opt/sfw/bin:/usr/sfw/bin:$TMP_PATH

    40  #default
    41  VERBOSE=1
    42  FILEAGEMIN=0

    43  #SHOWING free disk space
    44  WITHDF=0
    45  CUSTOMERONLY=0

    46  #Size of environment in bytes (typically a little bit less than 1MiB)
    47  MAXENVSIZE=`getconf ARG_MAX`

    48  #evaluate command line parameters
    49  for ARGUMENT in "$@"
    50  do
    51          case "$ARGUMENT" in
    52                  -rights)
    53                          WITHRIGHTS=1
    54                          #echo "WITHRIGHTS = $WITHRIGHTS"
    55                  ;;
    56                  -nodetails)
    57                          VERBOSE=0
    58                          #echo "VERBOSE = $VERBOSE"
    59                  ;;
    60                  -customer=*)
    61                           CUSTOMERONLY=1
    62                           CUSTOMERCODE="${ARGUMENT#*=}"
    63                  ;;
    64                  -fileagemin=*)
    65                          FILEAGEMIN="${ARGUMENT#*=}"
    66                          echo "Displaying files only that are older than $FILEAGEMIN minutes"
    67                  ;;
    68                  -withfreediskspace)
    69                          WITHDF=1
    70                  ;;
    71                  *|-?|--help)
    72                          echo "USAGE: $0 [-nodetails|-rights|-customer=<CUSTOMERCODE>|-fileagemin=<minutes>|-?|--help]"
    73                          echo "-nodetails                supresses detail information in common ComSys directories"
    74                          echo "-rights                   re-enables suppressed user rights information"
    75                          echo "-customer=<CUSTOMERCODE>  shows only agreements from a specific customer. Common directories will be reported too."
    76                          echo "-withfreediskspace        executes df -h also like in older versions of list"
    77                          echo "-fileagemin=<minutes>     only show files older than <minutes>"
    78                          echo "-?|--help                 shows this help"
    79                          echo
    80                          exit
    81                  ;;
    82          esac
    83  done

    84  # if -customer is specified on the command line <CUSTOMERCODE> can be a four or five letter code which:
    85  #       -either only contains the customer name, which causes the tool to evaluate agreements implemented in ALL regions or
    86  #       -the customer name WITH an one letter region code, which obviously evaluates only agreements implemented in that specific region
    87  # when investigating common comsys directories, the CUSTOMERCODE will be ignored

    88  #some string constant variables
    89  OLDEST_FILE_PREFIX="     oldest file:"
    90  MOST_RECENT_FILE_PREFIX="most recent file:"

    91  # TMPDIR for list
    92  LISTTMPDIR="/tmp/listtmpdir"

    93  # this scripts own process ID
    94  # EDIT using a more randomized number
    95  OWNPID=`od -vAn -N4 -tu4 < /dev/urandom | head -1 | gsed 's#[\t ]*##'`

    96  # tmpfile for ls -lt output
    97  LIST="$LISTTMPDIR""/LIST_filelist_$OWNPID"
    98  LIST2TEMPFILE="$LISTTMPDIR""/LIST2TEMPFILE_$OWNPID"

    99  #DEBUG
   100  #echo " Listfile= $LIST"
   101  #echo "LIST2TEMPFILE= $LIST2TEMPFILE"

   102  ERR="/ext/schenker/data/error"

   103  #create tmpdir if it doesn't exist
   104  [ ! -d $LISTTMPDIR ] && mkdir $LISTTMPDIR

   105  #remove files in tmpdir older than 2 days
   106  gfind $LISTTMPDIR -name "filelist*" -mtime +2 -type f -exec rm -f {} \;

   107  # create log entry in statlog file of the current day
   108  echo "list2 has been started on host" $HOSTNAME "on" `date +%Y.%m.%d.` "at" `date +%H:%M:%S` >> /ext/schenker/support/statlog/list/log/"$HOSTNAME"_listlog_of_`date +%Y.%m.%d`

   109  # create log entry in statlog csv file of the current day
   110  echo $HOSTNAME";""list2;"`date +%Y.%m.%d`";"`date +%H:%M:%S`";" >> /ext/schenker/support/statlog/csv/"$HOSTNAME"_`date +%Y%m%d`.csv

   111  #Wrapper for ls -lt command to filter unwanted entries, such as
   112  # - the summary line of ls -l
   113  # - all subdirectories
   114  # - remove output of standard access rights and user/group ownership
   115  # !!!! Attention! Does NOT work with MANY files as I need to use ls -lt it might lead to arglist too long


   116  lslt () {
   117          #initialize LSLTFILESSIZE with zero in case the calculation fails
   118          LSLTFILESSIZE=0
   119          OLDIFS=$IFS
   120          IFS=$(echo -en "\n\b")
   121          SUBDIR=$1

   122          pushd $SUBDIR >/dev/null
   123
   124          #remove and recreate the file
   125          #rm $LIST2TEMPFILE 2>/dev/null
   126          #/bin/touch $LIST2TEMPFILE

   127          #search files only older than $FILEAGEMIN minutes
   128          #DOES NOT WORK!
   129          #LSLTFILES=`gfind $SUBDIR/ -maxdepth 1 -type f -cmin +$FILEAGEMIN -ls | awk '{print $11}'`
   130          #DOES NOT WORK!! can't handle spaces in filenames
   131          #gfind -maxdepth 1 -type f -cmin +$FILEAGEMIN -ls 2>/dev/null | awk '{print $11}' | sed -e 's#^\.\/##'>  $LIST2TEMPFILE 2>/dev/null
   132          #DOES STILL NOT WORK !! can't handle special characters
   133          #gfind -maxdepth 1 -type f -cmin +$FILEAGEMIN -ls 2>/dev/null | gsed -e 's#.*\./##' | tr  -d '\\'  >  $LIST2TEMPFILE 2>/dev/null
   134
   135          #third attempt. This will only fail if we ever get a file name with a line break
   136          gfind -maxdepth 1 -type f -cmin +$FILEAGEMIN -print 2>/dev/null | tr  -d '\\' | gsed 's#^./##' > $LIST2TEMPFILE 2>/dev/null

   137          #check if < MAXENVLENGTH
   138          #LSLTFILESSIZE=${#LSLTFILES}
   139          LSLTFILESSIZE=`wc -m $LIST2TEMPFILE | sed 's#^ *##' |cut -d\  -f1 | sed 's# ##g'`
   140          if [[ "$LSLTFILESSIZE" -le "$MAXENVSIZE" ]]
   141          then
   142                  #echo "LSLTFILES=$LSLTFILES"
   143                  # only execute if directory is NOT empty
   144                  if [[ -s "$LIST2TEMPFILE" ]]
   145                  then
   146                          if [ $WITHRIGHTS ]
   147                          then
   148                                  /usr/bin/ls -lt `cat $LIST2TEMPFILE` 2>/dev/null | ggrep -v ^total | ggrep -v ^d
   149                          else
   150                                  /usr/bin/ls -lt `cat $LIST2TEMPFILE` 2>/dev/null | ggrep -v ^total | ggrep -v ^d | gsed 's#-rw-rw----   1 xib      xib##'
   151                          fi
   152                  fi
   153          else
   154                  # too many files for ls -lt to handle
   155                  # first inform user via stderr (as output of lslt is later used for displaying the directory listing)
   156                  #>&2 echo "too many files in directory $SUBDIR, switching to SLOW ls -lt emulation, please stand by..."
   157                  # second: switch to SLOW (!!!!!) stat / sort / awk emulation
   158                  for file in `ls -1`
   159                  do
   160                          stat -c "%A/%h/%U/%G/%s/%Y/%n" $file 2>/dev/null
   161                  done | sort -t/ -n -k 6 |  gawk -F"/" '{printf "%-11s%3s %-9s%-9s%7s %-13s%s\n",$1,$2,$3,$4,$5,strftime("%b %e %H:%M",$6),$7}'
   162          fi
   163          IFS=$OLDIFS
   164          popd > /dev/null
   165  }

   166  #Wrapper for printing a line of hashes
   167  echo_hash () {
   168          echo "######################################################################################################################"
   169  }

   170  #Wrapper for printing a line of asterisks
   171  echo_asterisk () {
   172          echo "**********************************************************************************************************************"
   173  }

   174  #run df -h to check for free disk space on mounted volumes
   175  check_free_space () {
   176          echo ""
   177          echo ""
   178          echo_hash
   179          echo "Filesystem"
   180          echo_hash
   181          echo ""
   182          df -h
   183  }

   184  #check fixed dirs in comsys (read configuration file for list)
   185  check_comsys_fixed_dirs () {
   186          #I need a defined format for ls output, so temporary switching
   187          GLOBAL_WITHRIGHTS="$WITHRIGHTS"
   188          WITHRIGHTS=1
   189          echo ""
   190          echo_hash
   191          echo "Comsys Directories"
   192          echo_hash
   193          echo ""

   194          #filter comments
   195          for DIR in `cat /ext/schenker/support/tools/check_comsys_dir| gegrep -v "^#" `
   196          do
   197                  # DEBUG
   198                  # echo "current directory = $DIRS"
   199                  if [ -d $DIR ] >/dev/null 2>&1
   200                  then
   201                          #echo "DIR before lslt = $DIR"
   202                          lslt $DIR > $LIST
   203                          #is there any file in the directory that we need to display?
   204                          if (( `cat $LIST|wc -l` > 0 ))
   205                          then
   206                                  echo_asterisk
   207                                  echo "$DIR:                                                 `cat $LIST | wc -l ` file(s)"
   208                                  echo_asterisk

   209                                  echo "$OLDEST_FILE_PREFIX $(cat "$LIST"| gsed 's#-rw-rw----   1 xib      xib##' |tail -1)"
   210
   211                                  #output oldest file if more than one file exists in directory:
   212                                  if (( `cat $LIST|wc -l` > 1 ))
   213                                  then
   214                                          echo "$MOST_RECENT_FILE_PREFIX $(cat "$LIST"| gsed 's#-rw-rw----   1 xib      xib##' |head -1)"

   215                                  fi
   216                                  if [ $VERBOSE -eq 1 ]
   217                                  then
   218                                          #detailed view only when more than two files exist:
   219                                          #use awk to cut off the 8 fields before the file name
   220                                          if (( `cat $LIST|wc -l` > 2 ))  && (( $(cat "$LIST"| awk '{$1=$2=$3=$4=$5=$6=$7=$8="";print}' | sort -u | wc -l ) > 1 ))
   221                                          then
   222                                                  echo
   223                                                  echo "------ Detailed list grouped and sorted by agreement, oldest file first per agreement -------"
   224                                                  echo
   225                                                  #display files per agreement
   226                                                  #assumption: directory contains files in format <agreement_name>.<counter>.<filename>
   227                                                  #iterate over all agreements, but NOT sort!

   228                                                  #DOES NOT WORK!
   229                                                  #for AGREEMENT in $(echo -n $(cat "$LIST" | awk '{print $9}' | sed -e 's#\..*##' | sort -u) )
   230                                                  #DOES STILL NOT WORK!!
   231                                                  #for AGREEMENT in $(echo -n $(cat "$LIST" |  gsed -e 's#.* ./##' -e 's#\..*##' | sort -u) )

   232  #
   233                                                  for AGREEMENT in $(echo -n $(cat "$LIST" |   awk '{$1=$2=$3=$4=$5=$6=$7=$8="";print}'| gsed  -e 's#\..*##' | sort -u) )
   234                                                  do
   235                                                          #DEBUG
   236                                                          #echo "$AGREEMENT:"

   237                                                          if [ $GLOBAL_WITHRIGHTS ]
   238                                                          then
   239                                                                  cat "$LIST" | ggrep "$AGREEMENT" | tail -1
   240                                                                  #only if more than two files per agreement exist display youngest file
   241                                                                  #OPTIMIZE ME!!!!!!!!!!!!!!
   242                                                                  if [[ $( cat "$LIST" | ggrep "$AGREEMENT" | tail -1) != $( cat "$LIST" | ggrep "$AGREEMENT" | head -1) ]]
   243                                                                  then
   244                                                                          cat "$LIST" | "grep $AGREEMENT" | head -1
   245                                                                          echo "total: $(cat $LIST | ggrep "$AGREEMENT" | wc -l) files"
   246                                                                  fi
   247                                                          else
   248                                                                  cat "$LIST" | ggrep "$AGREEMENT" | tail -1 | gsed 's#-rw-rw----   1 xib      xib##'
   249                                                                  #only if more than two files per agreement exist display youngest file
   250                                                                  #OPTIMIZE ME!!!!!!!!!!!!!!
   251                                                                  if [[ $( cat "$LIST" | ggrep "$AGREEMENT" | tail -1) != $( cat "$LIST" | ggrep "$AGREEMENT" | head -1) ]]
   252                                                                  then
   253                                                                          cat "$LIST" | ggrep "$AGREEMENT" | head -1 | gsed 's#-rw-rw----   1 xib      xib##'
   254                                                                          echo "total: $(cat $LIST | ggrep "$AGREEMENT" | wc -l) files"
   255                                                                  fi
   256                                                          fi #GLOBAL_WITHRIGHTS
   257                                                          echo
   258                                                   done #for AGREEMENT
   259                                          fi # more than 2 files
   260                                  fi # VERBOSE
   261                                  echo_asterisk
   262                                  echo ""
   263                          fi #any file found?
   264                  fi #is directory
   265          done #DIR
   266          WITHRIGHTS="$GLOBAL_WITHRIGHTS"
   267  }

   268  #check exception_error files in comsys for errors
   269  check_exception_error () {
   270          for COMS in `ls -d /ext/comsys*`
   271          do
   272                  if [ -s $COMS/log/exception_error ]
   273                  then
   274                          echo_asterisk
   275                          echo "$COMS/log/exception_error   Not equal 0 "
   276                          echo_asterisk
   277                          ls -lt $COMS/log/exception_error
   278                          echo_asterisk
   279                          echo ""
   280                  fi
   281          done
   282  }

   283  #check predefined system directories (see configuration file for list)
   284  check_system_dirs () {
   285          echo_hash
   286          echo "System Directories"
   287          echo_hash
   288          echo ""

   289          for DIRS in `cat /ext/schenker/support/tools/check_dir`
   290          do
   291                  if [ -d $DIRS ] >/dev/null 2>&1
   292                  then
   293                          lslt $DIRS > $LIST
   294                          if (( `cat $LIST|wc -l` > 0 ))
   295                          then
   296                                  echo_asterisk
   297                                  echo "$DIRS:            `cat $LIST | wc -l` file(s)"
   298                                  echo_asterisk
   299                                  echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
   300                                  [[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"
   301                                  echo_asterisk
   302                                  echo ""
   303                          fi
   304                  fi
   305          done
   306  }

   307  #check system.err files and print out size if != zero
   308  check_system_err_file () {
   309          if [ -s /ext/xib/data/log/system.err ]
   310          then
   311                  echo_asterisk
   312                  echo "/ext/xib/data/log/system.err is not equal 0 "
   313                  echo_asterisk
   314                  ls -lt /ext/xib/data/log/system.err | ggrep -v ^total
   315                  echo_asterisk
   316                  echo ""
   317          fi
   318  }

   319  #list files in error directory if there are some.
   320  check_error_dir () {
   321          #ERROR-Directory: Only print out if at least one file exists
   322          lslt $ERR > $LIST
   323          if (( `cat $LIST|wc -l` > 0 ))
   324          then
   325                  echo_hash
   326                  echo "ERROR Directory"
   327                  echo_hash
   328                  echo
   329                  echo_asterisk
   330                  echo "$ERR:            `cat $LIST | wc -l` file(s)"
   331                  echo_asterisk
   332                  echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
   333                  [[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"
   334                  echo_asterisk
   335                  echo
   336          fi
   337  }

   338  #check all outbound agreements
   339  #optional parameter: $CUSTOMERCODE
   340  check_outbound_agreements () {
   341          echo_hash
   342          echo "Outbound Agreement Directories (please standby..)"
   343          echo_hash
   344          echo ""
   345          echo "##DEBUG - CUSTOMERCODE= $CUSTOMERCODE"
   346          for AGROUT in `ls -1d /ext/comsys*/agr/$CUSTOMERCODE*outbound*|sort -u`
   347          do
   348                  #[ "$1" ] && echo "evaluating $AGROUT"
   349                  if [ -d "$AGROUT/imp" ] >/dev/null 2>&1
   350                  then
   351                          lslt "$AGROUT/imp"  > $LIST
   352                          if (( `cat $LIST|wc -l` > 0 ))
   353                          then
   354                                  echo_asterisk
   355                                  echo "$AGROUT/imp:              `cat $LIST | wc -l` file(s)"
   356                                  echo_asterisk
   357                                  echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
   358                                  [[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"
   359                                  echo_asterisk
   360                                  echo ""
   361                          fi
   362                  fi
   363          done
   364  }


   365  #check all inbound agreements
   366  #optional parameter: $CUSTOMERCODE
   367  check_inbound_agreements () {
   368          echo_hash
   369          echo "Inbound Agreement Directories (please standby...)"
   370          echo_hash
   371          echo ""
   372          #DEBUG
   373          echo "##DEBUG - CUSTOMERCODE= $CUSTOMERCODE"
   374          for AGRIN in `ls -1d /ext/comsys*/agr/$CUSTOMERCODE*inbound* | sort -u`
   375          do
   376                  #[ "$1" ] && echo "evaluating $AGRIN"
   377                  if [ -d "$AGRIN/exp" ] >/dev/null 2>&1
   378                  then
   379                          lslt "$AGRIN/exp" > $LIST
   380                          if (( `cat $LIST|wc -l` > 0 ))
   381                          then
   382                                  echo_asterisk
   383                                  echo "$AGRIN/exp:               `cat $LIST | wc -l` file(s)"
   384                                  echo_asterisk
   385                                  #tail -1 $LIST
   386                                  #[[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && head -1 $LIST

   387                                  echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
   388                                  [[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"

   389                                  echo_asterisk
   390                                  echo ""
   391                          fi
   392                  fi
   393          done
   394  }

   395  #check trace logs for being older than one week
   396  check_trace_log_age () {
   397          if [ `find /ext/xib/data/trace/173/t* -mtime +8 | wc -l` -gt 0 ]
   398          then
   399                  echo_hash
   400                  echo ""
   401                  echo_asterisk
   402                  echo "file in /ext/xib/data/trace/173/ is older than a week, ask SWORD OPERATIONS to check! "
   403                  echo_asterisk
   404                  echo ""
   405                  echo_hash
   406                  echo ""
   407          fi
   408  }



   409  #MAIN
   410  if [ "1" == "$CUSTOMERONLY" ]
   411  then
   412          echo "CUSTOMERCODE = $CUSTOMERCODE"
   413          #only check specific customer agreements
   414          check_comsys_fixed_dirs
   415          echo "evaluating only agreements beginning with $CUSTOMERCODE"
   416          check_outbound_agreements "$CUSTOMERCODE"
   417          check_inbound_agreements "$CUSTOMERCODE"
   418  else
   419          if [ "1" == "$WITHDF" ]
   420          then
   421                  check_free_space
   422          fi
   423  #all normal checks
   424          check_comsys_fixed_dirs
   425          check_exception_error
   426          check_system_dirs
   427          check_system_err_file
   428          check_error_dir
   429          check_outbound_agreements ""
   430          check_inbound_agreements ""
   431          check_trace_log_age
   432  fi

