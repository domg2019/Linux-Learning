#!/bin/bash
##################################################################################################################
#
# list - provides an overview about system and comsys status.
# original idea by Alexandros Cabadakis on: 15th of May 2008
# rewritten and extended by Lars Herrlein 2013-2018
#
# uses below configuration file to check for common ComSys directories (can be overridden @ command line)
# 
#	/app/sword/schenker/toolslocal/support/listcsdata/comsys_common_dirs_to_check
#
# last change:
#				13.11.2019 (lh) - added	   parameter -comsys=<INSTANCE> to output only one ComSys instance 
#							   (including only the common directories of that particular instance)
#				31.10.2019 (lh) - changed  several fixes after first run on b2bitstcom1
#				16.10.2019 (lh) - changed  ported script to B2Bi ComServer
#				14.02.2019 (lh) - fixed    size evaluation of file generated by lslt
#				19.11.2018 (lh) - fixed?   some directories are not shown
#				11.09.2018 (lh) - added    lslt SLOW handling of MANY files in one directory
#				02.01.2018 (lh) - fixed    usage of LISTCSTEMPFILE
#				04.10.2017 (lh) - fixed?   another try for file names with spaces, but not sure if this works
#                               01.09.2016 (lh)	- fixed    strange output in some cases 
#				31.08.2016 (lh) - fixed    file with special characters were ignored
#				31.03.2016 (lh) - changed  OWNPID now uses a more random number
#				13.11.2015 (lh) - fixed    files with space in the name were ignored
#				05.11.2015 (lh) - changed  parameter  -withfreediskspace adds below removed functionality 
#				                - changed  df -h will no longer be displayed by default
#				15.10.2015 (lh) - fixed    repaired below change after complain from Leo Su (added now pushd / popd in lslt)
#				12.10.2015 (lh) - added    first attempt to remove the path names from the file names in the directory listing 
#				24.08.2015 (lh) - changed  rehashed below change. still very slow due to usage of find AND ls -lt 
#				24.07.2015 (lh) - added    parameter -fileagemin to restrict output of only files older than <minutes>
#				08.01.2015 (lh) - added    prefix for oldest and most recent files for ALL directories	
#				07.01.2015 (lh) - added    command line switch -verbose to make additional output optional
#                               06.01.2015 (lh) - fixed    display issue when a directory contained only one file,
#                                              		   output of details in directories with files from more than
#                                                 	   agreement now only if more than 2 files exist in that directory
#                                                 	   (improved readability)
#				05.01.2015 (lh) - added:   more detailed output of directories containing files from 
#						           different agreements (e.g. /ext/comsys/impwork/ )
##################################################################################################################


#default
VERBOSE=1
FILEAGEMIN=0

#SHOWING free disk space
WITHDF=0
CUSTOMERONLY=0

#ComSys base directory
COMSYSBASEDIR="/app/sword/schenker/comsys"
STATLOGDIR="/app/sword/schenker/support/statlog"

#intial value for "comsys instances" (to monitor) =  ALL 
COMSYS_INSTANCES="$COMSYSBASEDIR/COMS*"

#Size of environment in bytes (typically a little bit less than 1MiB)
MAXENVSIZE=`getconf ARG_MAX`

#evaluate command line parameters
for ARGUMENT in "$@"
do
	case "$ARGUMENT" in
		-rights)
			WITHRIGHTS=1
			#echo "WITHRIGHTS = $WITHRIGHTS"
		;;
		-nodetails)
			VERBOSE=0
			#echo "VERBOSE = $VERBOSE"
		;;
		-customer=*)
			 CUSTOMERONLY=1
			 CUSTOMERCODE="${ARGUMENT#*=}"
		;;
                -comsys=*)
                         COMSYS_INSTANCES=$COMSYSBASEDIR/"${ARGUMENT#*=}"
                ;;
		-fileagemin=*)
			FILEAGEMIN="${ARGUMENT#*=}"
			echo "Displaying files only that are older than $FILEAGEMIN minutes"
		;;	
		-withfreediskspace)
			WITHDF=1
		;;	
		*|-?|--help)
			echo "USAGE: $0 [-nodetails|-rights|-customer=<CUSTOMERCODE>|-fileagemin=<minutes>|-?|--help]"
			echo "-nodetails                supresses detail information in COMMON ComSys directories"
			echo "-rights                   re-enables suppressed user rights information"
			echo "-customer=<CUSTOMERCODE>  shows only agreements from a specific customer."
			echo "                          COMMON ComSys directories will always be reported."
			echo "-comsys=<INSTANCE> 	only monitor comsys instance <INSTANCE>."
			echo "                          DEFAULT (when -comsys is not used) = COMS* = 'ALL' "
			echo "-withfreediskspace        executes df -h also like in older versions of list"
			echo "-fileagemin=<minutes>     only show files older than <minutes>"
			echo "-?|--help                 shows this help"
			echo 
			exit
		;;	
	esac
done	

# if -customer is specified on the command line <CUSTOMERCODE> can be a four or five letter code which: 
# 	-either only contains the customer name, which causes the tool to evaluate agreements implemented in ALL regions or
# 	-the customer name WITH an one letter region code, which obviously evaluates only agreements implemented in that specific region
# when investigating common comsys directories, the CUSTOMERCODE will be ignored 


#error directory /-ies
ERR=`grep ErrDir $COMSYS_INSTANCES/config/* | sed 's#.*=##'`


#monitor comexp_too_much directories
TOO_MUCH="$(ls -1d $COMSYS_INSTANCES/comexp_too_much/)"

#monitor the time of the current log for all comsys instances
COMSYSLOGDIR="$(ls -1d $COMSYS_INSTANCES/log)"

#monitor the lock info
COMSYSLOCKFILE="$(ls -1 $COMSYS_INSTANCES/stop/lock.info)"

#some preconfigured directories
COMMON_DIRS_TO_CHECK='/app/sword/schenker/toolslocal/support/listcsdata/comsys_common_dirs_to_check'

#some string constant variables
OLDEST_FILE_PREFIX="     oldest file:"
MOST_RECENT_FILE_PREFIX="most recent file:"

# TMPDIR for list
LISTTMPDIR="/tmp/listtmpdir"

# this scripts own process ID
OWNPID=`od -vAn -N4 -tu4 < /dev/urandom | head -1 | sed 's#[\t ]*##'`

# tmpfile for ls -lt output
LIST="$LISTTMPDIR""/LIST_filelist_$OWNPID"
LISTCSTEMPFILE="$LISTTMPDIR""/LISTCSTEMPFILE_$OWNPID"

#DEBUG 
#echo " Listfile= $LIST"
#echo "LISTCSTEMPFILE= $LISTCSTEMPFILE"

ERR="/app/sword/schenker/data/error"

#create tmpdir if it doesn't exist
[ ! -d $LISTTMPDIR ] && mkdir $LISTTMPDIR

#remove files in tmpdir older than 2 days
find $LISTTMPDIR -name "filelist*" -mtime +2 -type f -exec rm -f {} \;

# create log entry in statlog file of the current day
echo "list2 has been started on host" $HOSTNAME "on" `date +%Y.%m.%d.` "at" `date +%H:%M:%S` >> $STATLOGDIR/list/log/"$HOSTNAME"_listlog_of_`date +%Y.%m.%d`

# create log entry in statlog csv file of the current day
echo $HOSTNAME";""list2;"`date +%Y.%m.%d`";"`date +%H:%M:%S`";" >> $STATLOGDIR/csv/"$HOSTNAME"_`date +%Y%m%d`.csv

#Wrapper for ls -lt command to filter unwanted entries, such as
# - the summary line of ls -l
# - all subdirectories
# - remove output of standard access rights and user/group ownership
# !!!! Attention! Does NOT work with MANY files as I need to use ls -lt it might lead to arglist too long


lslt () {
	#initialize LSLTFILESSIZE with zero in case the calculation fails
	LSLTFILESSIZE=0
	OLDIFS=$IFS
	IFS=$(echo -en "\n\b")
	SUBDIR=$1

	pushd $SUBDIR >/dev/null
	
	#remove and recreate the file
	#rm $LISTCSTEMPFILE 2>/dev/null
	#/bin/touch $LISTCSTEMPFILE

	#search files only older than $FILEAGEMIN minutes  
	#DOES NOT WORK!
	#LSLTFILES=`find $SUBDIR/ -maxdepth 1 -type f -cmin +$FILEAGEMIN -ls | awk '{print $11}'`
        #DOES NOT WORK!! can't handle spaces in filenames
        #find -maxdepth 1 -type f -cmin +$FILEAGEMIN -ls 2>/dev/null | awk '{print $11}' | sed -e 's#^\.\/##'>  $LISTCSTEMPFILE 2>/dev/null
        #DOES STILL NOT WORK !! can't handle special characters
        #find -maxdepth 1 -type f -cmin +$FILEAGEMIN -ls 2>/dev/null | sed -e 's#.*\./##' | tr  -d '\\'  >  $LISTCSTEMPFILE 2>/dev/null
	
        #third attempt. This will only fail if we ever get a file name with a line break 
        find -maxdepth 1 -type f -cmin +$FILEAGEMIN -print 2>/dev/null | tr  -d '\\' | sed 's#^./##' > $LISTCSTEMPFILE 2>/dev/null

	#check if < MAXENVLENGTH
	#LSLTFILESSIZE=${#LSLTFILES}
	LSLTFILESSIZE=`wc -m $LISTCSTEMPFILE | sed 's#^ *##' |cut -d\  -f1 | sed 's# ##g'`
	if [[ "$LSLTFILESSIZE" -le "$MAXENVSIZE" ]]
	then 
		#echo "LSLTFILES=$LSLTFILES"		
		# only execute if directory is NOT empty 
		if [[ -s "$LISTCSTEMPFILE" ]]
		then
			if [ $WITHRIGHTS ]
		        then
		                ls -lt `cat $LISTCSTEMPFILE` 2>/dev/null | grep -v ^total | grep -v ^d 
	        	else
	                	ls -lt `cat $LISTCSTEMPFILE` 2>/dev/null | grep -v ^total | grep -v ^d | sed 's#-rw-rw----   1 xib      xib##'
		        fi
		fi	
	else 	
		# too many files for ls -lt to handle
		# first inform user via stderr (as output of lslt is later used for displaying the directory listing)
		#>&2 echo "too many files in directory $SUBDIR, switching to SLOW ls -lt emulation, please stand by..."
		# second: switch to SLOW (!!!!!) stat / sort / awk emulation
		for file in `ls -1`
		do
			stat -c "%A/%h/%U/%G/%s/%Y/%n" $file
	        done | sort -t/ -n -k 6 |  awk -F"/" '{printf "%-11s%3s %-9s%-9s%7s %-13s%s\n",$1,$2,$3,$4,$5,strftime("%b %e %H:%M",$6),$7}'
	fi
	IFS=$OLDIFS
	popd > /dev/null
}

#Wrapper for printing a line of hashes
echo_hash () {
        echo "######################################################################################################################"
}

#Wrapper for printing a line of asterisks
echo_asterisk () {
        echo "**********************************************************************************************************************"
}

#run df -h to check for free disk space on mounted volumes
check_free_space () {
        echo ""
        echo ""
        echo_hash
        echo "Filesystem"
        echo_hash
        echo ""
        df -h
}

#check fixed dirs in comsys (read configuration file for list)
#$1 = optional restriction of one ComSys instance
check_comsys_fixed_dirs () {
	#I need a defined format for ls output, so temporary switching
	GLOBAL_WITHRIGHTS="$WITHRIGHTS"
	WITHRIGHTS=1
	#either all instances or only one, depending on the command line parameter
	INSTANCE="$1"

        echo ""
        echo_hash
        echo "Comsys Directories"
        echo_hash
        echo ""

	#filter comments and restrict to only one ComSys instance if parameter -comsys was provided 
	for DIR in $(for line in $(cat $COMMON_DIRS_TO_CHECK |  egrep -v "^#" ); do echo $line | grep "$INSTANCE"; done )
        do
                # DEBUG
                # echo "current directory = $DIRS"
                if [ -d $DIR ] >/dev/null 2>&1
                then
			#echo "DIR before lslt = $DIR"	
			lslt $DIR > $LIST
			#is there any file in the directory that we need to display?
                        if (( `cat $LIST|wc -l` > 0 ))
                        then
                                echo_asterisk
				echo "$DIR:                                                 `cat $LIST | wc -l ` file(s)"
                                echo_asterisk

				echo "$OLDEST_FILE_PREFIX $(cat "$LIST"| sed 's#-rw-rw----   1 xib      xib##' |tail -1)"
				
				#output oldest file if more than one file exists in directory: 
                                if (( `cat $LIST|wc -l` > 1 ))
				then
					echo "$MOST_RECENT_FILE_PREFIX $(cat "$LIST"| sed 's#-rw-rw----   1 xib      xib##' |head -1)"

				fi
				if [ $VERBOSE -eq 1 ]
				then
					#detailed view only when more than two files exist:
					#use awk to cut off the 8 fields before the file name   
					if (( `cat $LIST|wc -l` > 2 ))  && (( $(cat "$LIST"| awk '{$1=$2=$3=$4=$5=$6=$7=$8="";print}' | sort -u | wc -l ) > 1 ))
					then 
						echo 
						echo "------ Detailed list grouped and sorted by agreement, oldest file first per agreement -------"
						echo
						#display files per agreement 
						#assumption: directory contains files in format <agreement_name>.<counter>.<filename> 
						#iterate over all agreements, but NOT sort!

						#DOES NOT WORK!
						#for AGREEMENT in $(echo -n $(cat "$LIST" | awk '{print $9}' | sed -e 's#\..*##' | sort -u) )
						#DOES STILL NOT WORK!!
						#for AGREEMENT in $(echo -n $(cat "$LIST" |  sed -e 's#.* ./##' -e 's#\..*##' | sort -u) )

#
						for AGREEMENT in $(echo -n $(cat "$LIST" |   awk '{$1=$2=$3=$4=$5=$6=$7=$8="";print}'| sed  -e 's#\..*##' | sort -u) )
						do
							#DEBUG
							#echo "$AGREEMENT:"

							if [ $GLOBAL_WITHRIGHTS ] 
							then 
								cat "$LIST" | grep "$AGREEMENT" | tail -1  
								#only if more than two files per agreement exist display youngest file 
								#OPTIMIZE ME!!!!!!!!!!!!!!
								if [[ $( cat "$LIST" | grep "$AGREEMENT" | tail -1) != $( cat "$LIST" | grep "$AGREEMENT" | head -1) ]] 
								then 
									cat "$LIST" | "grep $AGREEMENT" | head -1
									echo "total: $(cat $LIST | grep "$AGREEMENT" | wc -l) files"
								fi	
							else
								cat "$LIST" | grep "$AGREEMENT" | tail -1 | sed 's#-rw-rw----   1 xib      xib##'
								#only if more than two files per agreement exist display youngest file 
								#OPTIMIZE ME!!!!!!!!!!!!!!
								if [[ $( cat "$LIST" | grep "$AGREEMENT" | tail -1) != $( cat "$LIST" | grep "$AGREEMENT" | head -1) ]] 
								then 
									cat "$LIST" | grep "$AGREEMENT" | head -1 | sed 's#-rw-rw----   1 xib      xib##'
									echo "total: $(cat $LIST | grep "$AGREEMENT" | wc -l) files"
								fi
							fi #GLOBAL_WITHRIGHTS
							echo
						 done #for AGREEMENT
					fi # more than 2 files	
				fi # VERBOSE	
				echo_asterisk
                                echo ""
			fi #any file found?
                fi #is directory
        done #DIR
	WITHRIGHTS="$GLOBAL_WITHRIGHTS"
}

#check exception_error files in comsys for errors
check_exception_error () {
	#iterate over all (specified) ComSys instances
        for COMS in `ls -d $COMSYS_INSTANCES`
        do
                if [ -s $COMS/log/exception_error ]
                then
                        echo_asterisk
                        echo "$COMS/log/exception_error   Not equal 0 "
                        echo_asterisk
                        ls -lt $COMS/log/exception_error
                        echo_asterisk
                        echo ""
                fi
        done
}

#list files in error directory if there are some.
check_error_dir () {
	#ERR might be an array, depending of the commandline parameter
	#so we need to iterate over it
	for dir in $ERR
	do 
	        #ERROR-Directory: Only print out if at least one file exists
	        lslt $ERR > $LIST
	        if (( `cat $LIST|wc -l` > 0 ))
	        then
	                echo_hash
	                echo "ERROR Directory"
	                echo_hash
	                echo
	                echo_asterisk
	                echo "$ERR:            `cat $LIST | wc -l` file(s)"
	                echo_asterisk
			echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
	                [[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"
	                echo_asterisk
	                echo
	        fi
	done
}

#check all outbound agreements
#optional parameter: $CUSTOMERCODE
#optional 
check_outbound_agreements () {
        echo_hash
        echo "Outbound Agreement Directories (please standby..)"
        echo_hash
        echo ""
	#echo "##DEBUG - CUSTOMERCODE= $CUSTOMERCODE"
        for AGROUT in `ls -1d $COMSYS_INSTANCES/agr/$CUSTOMERCODE*outbound*|sort -u`
        do
                #[ "$1" ] && echo "evaluating $AGROUT"
                if [ -d "$AGROUT/imp" ] >/dev/null 2>&1
                then
                        lslt "$AGROUT/imp"  > $LIST
                        if (( `cat $LIST|wc -l` > 0 ))
                        then
                                echo_asterisk
                                echo "$AGROUT/imp:              `cat $LIST | wc -l` file(s)"
                                echo_asterisk
                                echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
				[[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"
                                echo_asterisk
                                echo ""
                        fi
                fi
        done
}


#check all inbound agreements
#optional parameter: $CUSTOMERCODE
check_inbound_agreements () {
        echo_hash
        echo "Inbound Agreement Directories (please standby...)"
        echo_hash
        echo ""
	#DEBUG
	#echo "##DEBUG - CUSTOMERCODE= $CUSTOMERCODE"
        for AGRIN in `ls -1d $COMSYS_INSTANCES/agr/$CUSTOMERCODE*inbound* | sort -u`
        do
		#[ "$1" ] && echo "evaluating $AGRIN"
                if [ -d "$AGRIN/exp" ] >/dev/null 2>&1
                then
                        lslt "$AGRIN/exp" > $LIST
                        if (( `cat $LIST|wc -l` > 0 ))
                        then
                                echo_asterisk
                                echo "$AGRIN/exp:               `cat $LIST | wc -l` file(s)"
                                echo_asterisk
                                #tail -1 $LIST
                                #[[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && head -1 $LIST

				echo "$OLDEST_FILE_PREFIX `tail -1 $LIST`"
				[[ "`head -1 $LIST`" != "`tail -1 $LIST`" ]] && echo "$MOST_RECENT_FILE_PREFIX `head -1 $LIST`"

                                echo_asterisk
                                echo ""
                        fi
                fi
        done
}

#MAIN
if [ "1" == "$CUSTOMERONLY" ]
then
	echo "CUSTOMERCODE = $CUSTOMERCODE"
	#only check specific customer agreements
        check_comsys_fixed_dirs "$COMSYS_INSTANCES"
        echo "evaluating only agreements beginning with $CUSTOMERCODE"
        check_outbound_agreements "$CUSTOMERCODE"
        check_inbound_agreements "$CUSTOMERCODE"
else
	if [ "1" == "$WITHDF" ]
	then
		check_free_space
	fi	
#all normal checks
        check_comsys_fixed_dirs "$COMSYS_INSTANCES"
        check_exception_error
        check_error_dir
        check_outbound_agreements ""
        check_inbound_agreements ""
fi


#clean LISTTMPDIR
rm $LIST
rm $LISTCSTEMPFILE
