#!/bin/bash

#####################################################################################################################
# Name:     Luis Liu
#
# History:
# 04.10.2023  0.5h    Create TMP monitor script
#####################################################################################################################

errorFolder="/app/sword/schenker/data/error";

function Beep()
{
        if [[ $beep == b ]];
                then  if [[ $(ls /app/sword/schenker/data/error | wc -l | bc) != 0 ]];
                                        then for i in $(seq 6);
                                                        do echo -en "\a";
                                                        sleep 0.6;
                                                 done;
                          fi
        fi
}

function checkError()
{
    fileCount=$(ls "${errorFolder}" | grep -c "\.att$" | bc);
    [[ "${fileCount}" != "0" ]] && echo -en "\a";
    echo -n "Massfilter : ";
    ls "${errorFolder}" | fgrep "MassFilter" | grep -c "\.att$";
    ls "${errorFolder}" | fgrep "MassFilter" | grep "\.att$" | cut -d\. -f2 | sort | uniq -c | while read line
    do
        echo "    ${line}";
    done
    echo -n "Error : ";
    ls "${errorFolder}" | fgrep -v "MassFilter" | grep -c "\.att$";
    ls "${errorFolder}" | fgrep -v "MassFilter" | grep "\.att$" | cut -d\. -f1 | sort | uniq -c | while read line
    do
        echo "    ${line}";
        processID=$(echo "${line}" | awk '{print $2}')
        ls -l | fgrep "${processID}." | while read subLine
        do
            echo "        ${subLine}";
        done
    done
}

function monitor()
{
    gap=$(echo $1 | bc);
        beep=$(echo $2);
    command='';
    if [[ "${gap}" == "" ]]; then
        checkError;
    elif [[ "${gap}" -gt 60 || "${gap}"  -lt 5 ]]
        then echo -e "Please input the monitor time value between 5-60 (min)"
    else
       for((count=1;count<=$((480/${gap}));count++))
        do
            if [[ "${command}" != "" ]]; then
                ${command};
                command='';
                echo -e "\nCommand ${command} has been executed, please press Enter to continue.";
                read dummy;
            else
                clear;
                date;
                checkError;
                                Beep;
                echo -e "Next check will be executed ${gap} minutes later.\nPress Enter to check again immediately.\nInput any command to run immediately.";
                read -t "$((${gap}*60))" command;
                sleep 1;
            fi
        done
    fi
}


monitor "$@";