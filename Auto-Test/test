#!/bin/bash

######################################################################
#Program:
#
#History:       2022.07.06     Luis    Released.
#
#EmailAdd:      luis.liu@dbschenker.com
######################################################################

ErrorFolder=/app/sword/schenker/data/error
LuisFolder=/app/sword/schenker/support/luis

#create two files to store errors on current shift
DateToday=`date +%Y%m%d`
mkdir ${LuisFolder}/${DateToday}
touch ${LuisFolder}/${DateToday}/cleanup.txt

#Use Time:H(hour) to judge if it's time to stop monitor
TimeStopA=9
TimeStopE=17
TimestopU=1
TimeNow=`date +%H|bc`

#check errors in error folder:
#do clean_up to remove ignored messages
clean_up -v |tea -a ${LuisFolder}/${DateToday}_cleanup.txt;
#list all error PIDs
ls "${ErrorFolder}" | fgrep -v "MassFilter" | grep "\.att$" | cut -d\. -f1 | sort | uniq | while read line
do if [ ${line} != "SYSTXERROR"]; then
   hk


function ref()
{
    for file in $(ls ${errorFolder}/*$1*.att | grep -v "MassFilter")
    do
        basename ${file};
        transaction=$(grep -A1 -E '^TransactionAttribute$' ${file} | grep -v "^TransactionAttribute$" | head -1);
        echo "Date/Time : $(echo ${transaction} | grep -Eo "[0-9]{4}-[a-zA-Z]{3}-[0-9]{2} [0-9:]{8}") CET";
        echo "TRID : $(grep -A1 -E '^TRID$' ${file} | sed -n '2p')";
        BDIDRefValues=$(grep -A1 -E '^BDIDRefValues$' ${file} | grep -v "^BDIDRefValues$" | head -1);
        if [[ ${BDIDRefValues} != '' ]];then
            echo ${BDIDRefValues:0:99} | awk -F\" '{print "BDID : "$2}';
            echo $BDIDRefValues | grep -Eo "\{[^{}]+\}" | awk -F\" '{print $2" : "$4}'
        fi
        echo "TransactionAttribute : ";
        echo -e "${transaction}\n";
    done
}


function hk()
{
    if [[ $1 != '' && $(echo $1 | grep -Eo [A-Z_0-9]{10}) == $1 ]]; then
        err;
        /app/sword/schenker/toolslocal/support/clean_up -v;
        echo;
        processID=$1;
        hkTmpFile="/tmp/hk_${processID}_$(date "+%Y%m%d%H%M%S").tmp";
        find /tmp/ -mtime +1 -name "hk_*.tmp" -exec /bin/rm {} \; 2>/dev/null;
        if [[ $(ls /tmp/hk_${processID}_*.tmp 2>/dev/null | wc -l | bc) != 0 ]];then
            echo "TMP file found for process ${processID} in /tmp as below";
            ls /tmp/hk_${processID}_*.tmp;
            echo "Possible root cause: Someone is running this command right now.";
            echo "Please check with your colleagues.";
            echo "Only remove the files if no one else is running hk (please check with ps -efa | grep hk | grep ${processID} | grep -v grep) and try again.";
        else
            ls | grep -v "MassFilter" | grep "${processID}.*.att" | sed 's/.att$//g' > ${hkTmpFile};
            echo -n ">>>The number of ${processID} error file(s) is: ";
            wc -l ${hkTmpFile} | awk '{print $1}';
            for file in $(cat ${hkTmpFile})
            do
                ls -l ${file}*;
            done
            echo -e "\n>>>File info:";
            for file in $(cat ${hkTmpFile})
            do
                ref ${file};
            done
            echo ">>>Moving file to housekeeping folder:";
            for file in $(cat ${hkTmpFile})
            do
                /bin/mv -v ${file}* ${houseKeepPath};
            done
            /usr/bin/rm ${hkTmpFile};
        fi
    else
        echo "Please input a valid processID as parameter.";
    fi
}






